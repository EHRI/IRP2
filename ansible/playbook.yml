---
- hosts: irp2
  become: yes

  vars:
    project_path: /opt/IRP2
    virtualenv_path: /opt/irp2venv

  tasks:
    - name: Add source repository
      apt_repository: repo="deb-src http://us.archive.ubuntu.com/ubuntu/ xenial main restricted" state=present
    - name: Install packages
      apt: pkg={{ item }} state=latest
      with_items:
        - python3
        - python3-dev
        - python3-lxml
        - python-virtualenv
        - python3-pip
        - libz-dev
        - git
        - nginx
        - sqlite3

    - name: Install Python3 LXML dependencies
      apt: pkg=python3-lxml state=build-dep

    - name: Creating project folder
      file: path="{{ project_path }}" state=directory mode=0755 owner="{{ user }}" group="{{ group }}"
      tags: code
      when: vagrant is not defined

    - name: Deploy application code
      copy: src=../{{ item }} dest={{ project_path }} mode=0755 owner="{{ user }}" group="{{ group }}"
      with_items:
        - archives
        - static
        - templates
        - dashboard.py
        - wsgi.py
        - flask_extended.py
        - initdb.sh
        - requirements.txt
      become: yes
      when: vagrant is not defined
      tags: code

    - name: Deploy instance (no overwrite)
      copy: src=../instance dest={{ project_path }} mode=0755 force=no
      become: no
      when: vagrant is not defined
      tags: code

    - name: Create virtualenv dir
      file: path={{ virtualenv_path }} owner={{ user }} group={{ group }} state=directory
      become: yes

    - name: Create virtualenv
      command: virtualenv --python=/usr/bin/python3 {{ virtualenv_path }}
      become: yes
      become_user: "{{ user }}"
      #ignore_errors: true

    - name: Install Python package dependencies
      command: "{{ virtualenv_path }}/bin/pip3 install -r {{ project_path }}/requirements.txt"
      become: yes
      become_user: "{{ user }}"

    - name: Edit the virtualenv activate script to set environment variables
      become: yes
      become_user: "{{ user }}"
      lineinfile:
        dest: "{{ virtualenv_path }}/bin/activate"
        insertafter: EOF
        line: "export FLASK_APP={{ project_path }}/dashboard.py"

    - name: Edit the virtualenv activate script to set environment variables
      become: yes
      become_user: "{{ user }}"
      lineinfile:
        dest: "{{ virtualenv_path }}/bin/activate"
        insertafter: EOF
        line: "export GOOGLE_APPLICATION_CREDENTIALS={{ virtualenv_path }}/gcloud_keyfile.json"

    - template: src=venv_exec.j2 dest={{ virtualenv_path }}/bin/exec mode=755
      become: yes
      become_user: "{{ user }}"

    - copy: src=../gcloud_keyfile.json dest={{ virtualenv_path }}/gcloud_keyfile.json
      become: yes
      become_user: "{{ user }}"

    - name: Initialize DB
      become: yes
      become_user: "{{ user }}"
      command: "{{ project_path }}/initdb.sh {{ project_path }}/instance/irp2.db {{ project_path }}/instance/artist.csv.tar.gz {{ project_path }}/instance/location.csv.tar.gz {{ project_path }}/instance/technique.csv.tar.gz"

    - include: setup_nginx.yml
      tags: nginx

    - name: Deploy IRP2 (Gunicorn) SystemD Service
      template: src=irp2.service.j2 dest=/etc/systemd/system/irp2.service

    - name: Enable IRP2 (Gunicorn) service
      service: name=irp2.service enabled=yes state=restarted

  handlers:
    - name: restart Nginx
      service: name=nginx state=restarted
